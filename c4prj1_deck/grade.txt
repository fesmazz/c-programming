Grading at Tue Sep 22 05:07:06 UTC 2020
Compiling deck.c -> deck.o
Compiling eval.c -> eval.o
Compiling cards.c -> cards.o
Linking eval.o, deck.o, cards.o, and our tester
Testing free_deck(deck_t *)
- Test passed
Testing add_card_to(deck_t *, card_t)
timeout: the monitored command dumped core
Valgrind reported errors:
==1059== Memcheck, a memory error detector
==1059== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1059== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1059== Command: ./tester act
==1059== Parent PID: 1058
==1059== 
==1059== Use of uninitialised value of size 8
==1059==    at 0x402165: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1059==    by 0x404182: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1059==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1059== 
==1059== Invalid write of size 8
==1059==    at 0x402165: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1059==    by 0x404182: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1059==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1059==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1059== 
==1059== 
==1059== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1059==  Access not within mapped region at address 0x0
==1059==    at 0x402165: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1059==    by 0x404182: check_add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1059==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1059==  If you believe this happened as a result of a stack
==1059==  overflow in your program's main thread (unlikely but
==1059==  possible), you can try to increase the size of the
==1059==  main thread stack using the --main-stacksize= flag.
==1059==  The main thread stack size used in this run was 8388608.
==1059== 
==1059== HEAP SUMMARY:
==1059==     in use at exit: 904 bytes in 58 blocks
==1059==   total heap usage: 58 allocs, 0 frees, 904 bytes allocated
==1059== 
==1059== LEAK SUMMARY:
==1059==    definitely lost: 0 bytes in 0 blocks
==1059==    indirectly lost: 0 bytes in 0 blocks
==1059==      possibly lost: 0 bytes in 0 blocks
==1059==    still reachable: 904 bytes in 58 blocks
==1059==         suppressed: 0 bytes in 0 blocks
==1059== Rerun with --leak-check=full to see details of leaked memory
==1059== 
==1059== For counts of detected and suppressed errors, rerun with: -v
==1059== Use --track-origins=yes to see where uninitialised values come from
==1059== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing add_empty_card(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1063== Memcheck, a memory error detector
==1063== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1063== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1063== Command: ./tester aec
==1063== Parent PID: 1062
==1063== 
==1063== Use of uninitialised value of size 8
==1063==    at 0x402165: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1063==    by 0x402197: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1063==    by 0x403BAE: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1063==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1063== 
==1063== Invalid write of size 8
==1063==    at 0x402165: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1063==    by 0x402197: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1063==    by 0x403BAE: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1063==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1063==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1063== 
==1063== 
==1063== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1063==  Access not within mapped region at address 0x0
==1063==    at 0x402165: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1063==    by 0x402197: add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1063==    by 0x403BAE: check_add_empty_card (in /graderhome/work/c4prj1_deck/tester)
==1063==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1063==  If you believe this happened as a result of a stack
==1063==  overflow in your program's main thread (unlikely but
==1063==  possible), you can try to increase the size of the
==1063==  main thread stack using the --main-stacksize= flag.
==1063==  The main thread stack size used in this run was 8388608.
==1063== 
==1063== HEAP SUMMARY:
==1063==     in use at exit: 6,936 bytes in 447 blocks
==1063==   total heap usage: 455 allocs, 8 frees, 7,048 bytes allocated
==1063== 
==1063== LEAK SUMMARY:
==1063==    definitely lost: 0 bytes in 0 blocks
==1063==    indirectly lost: 0 bytes in 0 blocks
==1063==      possibly lost: 0 bytes in 0 blocks
==1063==    still reachable: 6,936 bytes in 447 blocks
==1063==         suppressed: 0 bytes in 0 blocks
==1063== Rerun with --leak-check=full to see details of leaked memory
==1063== 
==1063== For counts of detected and suppressed errors, rerun with: -v
==1063== Use --track-origins=yes to see where uninitialised values come from
==1063== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing make_deck_exclude(deck_t *)
timeout: the monitored command dumped core
Valgrind reported errors:
==1067== Memcheck, a memory error detector
==1067== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1067== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1067== Command: ./tester mde
==1067== Parent PID: 1066
==1067== 
==1067== Use of uninitialised value of size 8
==1067==    at 0x402165: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1067==    by 0x402229: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1067==    by 0x40386C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1067==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1067== 
==1067== Invalid write of size 8
==1067==    at 0x402165: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1067==    by 0x402229: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1067==    by 0x40386C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1067==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1067==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1067== 
==1067== 
==1067== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1067==  Access not within mapped region at address 0x0
==1067==    at 0x402165: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1067==    by 0x402229: make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1067==    by 0x40386C: check_make_deck_exclude (in /graderhome/work/c4prj1_deck/tester)
==1067==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1067==  If you believe this happened as a result of a stack
==1067==  overflow in your program's main thread (unlikely but
==1067==  possible), you can try to increase the size of the
==1067==  main thread stack using the --main-stacksize= flag.
==1067==  The main thread stack size used in this run was 8388608.
==1067== 
==1067== HEAP SUMMARY:
==1067==     in use at exit: 888 bytes in 57 blocks
==1067==   total heap usage: 57 allocs, 0 frees, 888 bytes allocated
==1067== 
==1067== LEAK SUMMARY:
==1067==    definitely lost: 0 bytes in 0 blocks
==1067==    indirectly lost: 0 bytes in 0 blocks
==1067==      possibly lost: 0 bytes in 0 blocks
==1067==    still reachable: 888 bytes in 57 blocks
==1067==         suppressed: 0 bytes in 0 blocks
==1067== Rerun with --leak-check=full to see details of leaked memory
==1067== 
==1067== For counts of detected and suppressed errors, rerun with: -v
==1067== Use --track-origins=yes to see where uninitialised values come from
==1067== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 0 from 0)
Testing build_remaining_deck(deck_t **, size_t)
Testing with 1 hand
timeout: the monitored command dumped core
Valgrind reported errors:
==1071== Memcheck, a memory error detector
==1071== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==1071== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==1071== Command: ./tester brd
==1071== Parent PID: 1070
==1071== 
==1071== Invalid write of size 8
==1071==    at 0x402267: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4034CC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1071==  Address 0x5205308 is 0 bytes after a block of size 8 alloc'd
==1071==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1071==    by 0x402253: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4034CC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1071== 
==1071== Conditional jump or move depends on uninitialised value(s)
==1071==    at 0x4022D2: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4034CC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1071== 
==1071== Use of uninitialised value of size 8
==1071==    at 0x40229D: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4034CC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1071== 
==1071== Invalid read of size 8
==1071==    at 0x402108: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4022AE: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4034CC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1071==  Address 0x5205308 is 0 bytes after a block of size 8 alloc'd
==1071==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1071==    by 0x402253: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4034CC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1071== 
==1071== Invalid write of size 8
==1071==    at 0x402114: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4022AE: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4034CC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1071==  Address 0x5205308 is 0 bytes after a block of size 8 alloc'd
==1071==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1071==    by 0x402253: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4034CC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1071== 
==1071== Invalid read of size 8
==1071==    at 0x40211C: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4022AE: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4034CC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1071==  Address 0x5205308 is 0 bytes after a block of size 8 alloc'd
==1071==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1071==    by 0x402253: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4034CC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1071== 
==1071== Invalid read of size 8
==1071==    at 0x40214F: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4022AE: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4034CC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1071==  Address 0x5205308 is 0 bytes after a block of size 8 alloc'd
==1071==    at 0x4C2DB8F: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1071==    by 0x402253: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4034CC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1071== 
==1071== Use of uninitialised value of size 8
==1071==    at 0x402165: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4022AE: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4034CC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1071== 
==1071== Invalid write of size 8
==1071==    at 0x402165: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4022AE: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4034CC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1071==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==1071== 
==1071== 
==1071== Process terminating with default action of signal 11 (SIGSEGV): dumping core
==1071==  Access not within mapped region at address 0x0
==1071==    at 0x402165: add_card_to (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4022AE: build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x4034CC: check_build_remaining_deck (in /graderhome/work/c4prj1_deck/tester)
==1071==    by 0x400A78: main (in /graderhome/work/c4prj1_deck/tester)
==1071==  If you believe this happened as a result of a stack
==1071==  overflow in your program's main thread (unlikely but
==1071==  possible), you can try to increase the size of the
==1071==  main thread stack using the --main-stacksize= flag.
==1071==  The main thread stack size used in this run was 8388608.
==1071== 
==1071== HEAP SUMMARY:
==1071==     in use at exit: 96 bytes in 10 blocks
==1071==   total heap usage: 11 allocs, 1 frees, 4,192 bytes allocated
==1071== 
==1071== LEAK SUMMARY:
==1071==    definitely lost: 0 bytes in 0 blocks
==1071==    indirectly lost: 0 bytes in 0 blocks
==1071==      possibly lost: 0 bytes in 0 blocks
==1071==    still reachable: 96 bytes in 10 blocks
==1071==         suppressed: 0 bytes in 0 blocks
==1071== Rerun with --leak-check=full to see details of leaked memory
==1071== 
==1071== For counts of detected and suppressed errors, rerun with: -v
==1071== Use --track-origins=yes to see where uninitialised values come from
==1071== ERROR SUMMARY: 9 errors from 9 contexts (suppressed: 0 from 0)
Testing get_match_count(deck_t *)
- Test passed

Overall Grade: F
